syntax = "proto3";

package infraboard.maudit.event;
option go_package = "github.com/infraboard/maudit/apps/event";

import "google/protobuf/any.proto";
import "mcube/pb/page/page.proto";

enum Level {
	TRACE = 0; 
	DEBUG = 1;
    INFO = 2;
    WARN = 3;
    ERROR = 4;
    CRITICAL = 5;
    DISASTER = 6;
}

enum Type {
    // 记录用户的操作记录
    OPERATE = 0;
}

enum ContentType {
    // 采用probuf编码, 默认
    PROTOBUF = 0;
    // 采用Json编码
    JSON = 1;
}

service Service {
	rpc SaveEvent(SaveEventRequest) returns(SaveReponse) {};
	rpc QueryEvent(QueryEventRequest) returns(OperateEventSet) {};
}

// Event to be used by controllers.
message Event {
    // 事件ID
    // @gotags: bson:"_id" json:"id"
    string id = 1;
    // 事件类型
    // @gotags: bson:"type" json:"type"
    Type type = 2;
    // 事件头
    // @gotags: bson:"header" json:"header"
    Header header = 3;
    // data 具体的数据
    // @gotags: bson:"-" json:"body"
    google.protobuf.Any body = 4;
}

message Header {
    // 事件发送时间
    // @gotags: bson:"time" json:"time"
    int64 time = 7;
    // 请求ID
    // @gotags: bson:"request_id" json:"request_id"
    string request_id = 6;
    // 事件来源
    // @gotags: bson:"source" json:"source"
    string source = 1;
    // 用户UA
    // @gotags: bson:"user_agent" json:"user_agent"
    string user_agent = 2;
    // 操作者IP
    // @gotags: bson:"ip_address" json:"ip_address"
    string ip_address = 3;
    // 事件等级
    // @gotags: bson:"level" json:"level"
    Level level = 4;
    // Body编码格式
    // @gotags: bson:"content_type" json:"content_type"
    ContentType content_type = 8;
    // 数据metas
    // @gotags: bson:"meta" json:"meta"
    map<string, string> meta = 5;
}

// OperateEvent 事件具体数据
message OperateEventData {
    // 回话ID
    // @gotags: bson:"session" json:"session"
    string session = 1;
    // 操作人
    // @gotags: bson:"account" json:"account"
    string account = 2;
    // 用户名称
    // @gotags: bson:"user_name" json:"user_name"
    string user_name = 4;
    // 用户类型
    // @gotags: bson:"user_type" json:"user_type"
    string user_type = 5;
    // 操作的域
    // @gotags: bson:"user_domain" json:"user_domain"
    string user_domain = 6;
    // 服务名称
    // @gotags: bson:"service_name" json:"service_name"
    string service_name = 7;
    // 功能路径
    // @gotags: bson:"feature_path" json:"feature_path"
    string feature_path = 8;
    // 资源类型
    // @gotags: bson:"resource_type" json:"resource_type"
    string resource_type = 9;
    // 操作动作
    // @gotags: bson:"action" json:"action"
    string action = 10;
    // 操作耗时, 单位毫秒
    // @gotags: bson:"cost" json:"cost"
    int64 cost = 13;
    // 事件数据
    // @gotags: bson:"request" json:"request,omitempty"
    string request = 11;
    // 事件数据
    // @gotags: bson:"response" json:"response,omitempty"
    string response = 12;
}

message OperateEvent {
    // 事件ID
    // @gotags: bson:"_id" json:"id"
    string id = 1;
    // 事件保存时间
    // @gotags: bson:"save_at" json:"save_at"
    int64 save_at = 2;
    // 事件类型
    // @gotags: bson:"type" json:"type"
    Type type = 3;
    // 事件头
    // @gotags: bson:"header" json:"header"
    Header header = 4;
    // 操作事件数据
    // @gotags: bson:"body" json:"body"
    OperateEventData body = 5;
}

// OperateEventSet todo
message OperateEventSet {
    // @gotags: json:"total"
    int64 total = 1;
    // @gotags: json:"items"
    repeated OperateEvent items = 2;
}

message SaveReponse {
    // @gotags: json:"success"
    repeated string success = 1;
     // @gotags: json:"failed"
    repeated string failed = 2;
}

// SaveEventRequest 保存事件
message SaveEventRequest {
    // @gotags: bson:"items" json:"items"
    repeated Event items = 1;
}

// QueryEventRequest 查询Book请求
message QueryEventRequest {
    infraboard.mcube.page.PageRequest page = 1;
    string name = 2;
}