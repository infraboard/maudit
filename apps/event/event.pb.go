// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.6
// source: maudit/apps/event/pb/event.proto

package event

import (
	request "github.com/infraboard/mcube/http/request"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Level int32

const (
	Level_TRACE    Level = 0
	Level_DEBUG    Level = 1
	Level_INFO     Level = 2
	Level_WARN     Level = 3
	Level_ERROR    Level = 4
	Level_CRITICAL Level = 5
	Level_DISASTER Level = 6
)

// Enum value maps for Level.
var (
	Level_name = map[int32]string{
		0: "TRACE",
		1: "DEBUG",
		2: "INFO",
		3: "WARN",
		4: "ERROR",
		5: "CRITICAL",
		6: "DISASTER",
	}
	Level_value = map[string]int32{
		"TRACE":    0,
		"DEBUG":    1,
		"INFO":     2,
		"WARN":     3,
		"ERROR":    4,
		"CRITICAL": 5,
		"DISASTER": 6,
	}
)

func (x Level) Enum() *Level {
	p := new(Level)
	*p = x
	return p
}

func (x Level) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Level) Descriptor() protoreflect.EnumDescriptor {
	return file_maudit_apps_event_pb_event_proto_enumTypes[0].Descriptor()
}

func (Level) Type() protoreflect.EnumType {
	return &file_maudit_apps_event_pb_event_proto_enumTypes[0]
}

func (x Level) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Level.Descriptor instead.
func (Level) EnumDescriptor() ([]byte, []int) {
	return file_maudit_apps_event_pb_event_proto_rawDescGZIP(), []int{0}
}

type Type int32

const (
	// 记录用户的操作记录
	Type_OPERATE Type = 0
)

// Enum value maps for Type.
var (
	Type_name = map[int32]string{
		0: "OPERATE",
	}
	Type_value = map[string]int32{
		"OPERATE": 0,
	}
)

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}

func (x Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type) Descriptor() protoreflect.EnumDescriptor {
	return file_maudit_apps_event_pb_event_proto_enumTypes[1].Descriptor()
}

func (Type) Type() protoreflect.EnumType {
	return &file_maudit_apps_event_pb_event_proto_enumTypes[1]
}

func (x Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Type.Descriptor instead.
func (Type) EnumDescriptor() ([]byte, []int) {
	return file_maudit_apps_event_pb_event_proto_rawDescGZIP(), []int{1}
}

type ContentType int32

const (
	// 采用probuf编码, 默认
	ContentType_PROTOBUF ContentType = 0
	// 采用Json编码
	ContentType_JSON ContentType = 1
)

// Enum value maps for ContentType.
var (
	ContentType_name = map[int32]string{
		0: "PROTOBUF",
		1: "JSON",
	}
	ContentType_value = map[string]int32{
		"PROTOBUF": 0,
		"JSON":     1,
	}
)

func (x ContentType) Enum() *ContentType {
	p := new(ContentType)
	*p = x
	return p
}

func (x ContentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContentType) Descriptor() protoreflect.EnumDescriptor {
	return file_maudit_apps_event_pb_event_proto_enumTypes[2].Descriptor()
}

func (ContentType) Type() protoreflect.EnumType {
	return &file_maudit_apps_event_pb_event_proto_enumTypes[2]
}

func (x ContentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContentType.Descriptor instead.
func (ContentType) EnumDescriptor() ([]byte, []int) {
	return file_maudit_apps_event_pb_event_proto_rawDescGZIP(), []int{2}
}

// Event to be used by controllers.
type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 事件ID
	// @gotags: bson:"_id" json:"id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" bson:"_id"`
	// 事件类型
	// @gotags: bson:"type" json:"type"
	Type Type `protobuf:"varint,2,opt,name=type,proto3,enum=infraboard.maudit.event.Type" json:"type" bson:"type"`
	// 事件头
	// @gotags: bson:"header" json:"header"
	Header *Header `protobuf:"bytes,3,opt,name=header,proto3" json:"header" bson:"header"`
	// data 具体的数据
	// @gotags: bson:"-" json:"body"
	Body *anypb.Any `protobuf:"bytes,4,opt,name=body,proto3" json:"body" bson:"-"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_maudit_apps_event_pb_event_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_maudit_apps_event_pb_event_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_maudit_apps_event_pb_event_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Event) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_OPERATE
}

func (x *Event) GetHeader() *Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Event) GetBody() *anypb.Any {
	if x != nil {
		return x.Body
	}
	return nil
}

type Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 事件发送时间
	// @gotags: bson:"time" json:"time"
	Time int64 `protobuf:"varint,7,opt,name=time,proto3" json:"time" bson:"time"`
	// 请求ID
	// @gotags: bson:"request_id" json:"request_id"
	RequestId string `protobuf:"bytes,6,opt,name=request_id,json=requestId,proto3" json:"request_id" bson:"request_id"`
	// 事件来源
	// @gotags: bson:"source" json:"source"
	Source string `protobuf:"bytes,1,opt,name=source,proto3" json:"source" bson:"source"`
	// 用户UA
	// @gotags: bson:"user_agent" json:"user_agent"
	UserAgent string `protobuf:"bytes,2,opt,name=user_agent,json=userAgent,proto3" json:"user_agent" bson:"user_agent"`
	// 操作者IP
	// @gotags: bson:"ip_address" json:"ip_address"
	IpAddress string `protobuf:"bytes,3,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address" bson:"ip_address"`
	// 事件等级
	// @gotags: bson:"level" json:"level"
	Level Level `protobuf:"varint,4,opt,name=level,proto3,enum=infraboard.maudit.event.Level" json:"level" bson:"level"`
	// Body编码格式
	// @gotags: bson:"content_type" json:"content_type"
	ContentType ContentType `protobuf:"varint,8,opt,name=content_type,json=contentType,proto3,enum=infraboard.maudit.event.ContentType" json:"content_type" bson:"content_type"`
	// 数据metas
	// @gotags: bson:"meta" json:"meta"
	Meta map[string]string `protobuf:"bytes,5,rep,name=meta,proto3" json:"meta" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"meta"`
}

func (x *Header) Reset() {
	*x = Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_maudit_apps_event_pb_event_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Header) ProtoMessage() {}

func (x *Header) ProtoReflect() protoreflect.Message {
	mi := &file_maudit_apps_event_pb_event_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Header.ProtoReflect.Descriptor instead.
func (*Header) Descriptor() ([]byte, []int) {
	return file_maudit_apps_event_pb_event_proto_rawDescGZIP(), []int{1}
}

func (x *Header) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Header) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *Header) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Header) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *Header) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *Header) GetLevel() Level {
	if x != nil {
		return x.Level
	}
	return Level_TRACE
}

func (x *Header) GetContentType() ContentType {
	if x != nil {
		return x.ContentType
	}
	return ContentType_PROTOBUF
}

func (x *Header) GetMeta() map[string]string {
	if x != nil {
		return x.Meta
	}
	return nil
}

// OperateEvent 事件具体数据
type OperateEventData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 回话ID
	// @gotags: bson:"session" json:"session"
	Session string `protobuf:"bytes,1,opt,name=session,proto3" json:"session" bson:"session"`
	// 操作人
	// @gotags: bson:"account" json:"account"
	Account string `protobuf:"bytes,2,opt,name=account,proto3" json:"account" bson:"account"`
	// 用户名称
	// @gotags: bson:"user_name" json:"user_name"
	UserName string `protobuf:"bytes,4,opt,name=user_name,json=userName,proto3" json:"user_name" bson:"user_name"`
	// 用户类型
	// @gotags: bson:"user_type" json:"user_type"
	UserType string `protobuf:"bytes,5,opt,name=user_type,json=userType,proto3" json:"user_type" bson:"user_type"`
	// 操作的域
	// @gotags: bson:"user_domain" json:"user_domain"
	UserDomain string `protobuf:"bytes,6,opt,name=user_domain,json=userDomain,proto3" json:"user_domain" bson:"user_domain"`
	// 服务名称
	// @gotags: bson:"service_name" json:"service_name"
	ServiceName string `protobuf:"bytes,7,opt,name=service_name,json=serviceName,proto3" json:"service_name" bson:"service_name"`
	// 功能路径
	// @gotags: bson:"feature_path" json:"feature_path"
	FeaturePath string `protobuf:"bytes,8,opt,name=feature_path,json=featurePath,proto3" json:"feature_path" bson:"feature_path"`
	// 资源类型
	// @gotags: bson:"resource_type" json:"resource_type"
	ResourceType string `protobuf:"bytes,9,opt,name=resource_type,json=resourceType,proto3" json:"resource_type" bson:"resource_type"`
	// 操作动作
	// @gotags: bson:"action" json:"action"
	Action string `protobuf:"bytes,10,opt,name=action,proto3" json:"action" bson:"action"`
	// 操作耗时, 单位毫秒
	// @gotags: bson:"cost" json:"cost"
	Cost int64 `protobuf:"varint,13,opt,name=cost,proto3" json:"cost" bson:"cost"`
	// 事件数据
	// @gotags: bson:"request" json:"request,omitempty"
	Request string `protobuf:"bytes,11,opt,name=request,proto3" json:"request,omitempty" bson:"request"`
	// 事件数据
	// @gotags: bson:"response" json:"response,omitempty"
	Response string `protobuf:"bytes,12,opt,name=response,proto3" json:"response,omitempty" bson:"response"`
}

func (x *OperateEventData) Reset() {
	*x = OperateEventData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_maudit_apps_event_pb_event_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperateEventData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperateEventData) ProtoMessage() {}

func (x *OperateEventData) ProtoReflect() protoreflect.Message {
	mi := &file_maudit_apps_event_pb_event_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperateEventData.ProtoReflect.Descriptor instead.
func (*OperateEventData) Descriptor() ([]byte, []int) {
	return file_maudit_apps_event_pb_event_proto_rawDescGZIP(), []int{2}
}

func (x *OperateEventData) GetSession() string {
	if x != nil {
		return x.Session
	}
	return ""
}

func (x *OperateEventData) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *OperateEventData) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *OperateEventData) GetUserType() string {
	if x != nil {
		return x.UserType
	}
	return ""
}

func (x *OperateEventData) GetUserDomain() string {
	if x != nil {
		return x.UserDomain
	}
	return ""
}

func (x *OperateEventData) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *OperateEventData) GetFeaturePath() string {
	if x != nil {
		return x.FeaturePath
	}
	return ""
}

func (x *OperateEventData) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *OperateEventData) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *OperateEventData) GetCost() int64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *OperateEventData) GetRequest() string {
	if x != nil {
		return x.Request
	}
	return ""
}

func (x *OperateEventData) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

type OperateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 事件ID
	// @gotags: bson:"_id" json:"id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" bson:"_id"`
	// 事件保存时间
	// @gotags: bson:"save_at" json:"save_at"
	SaveAt int64 `protobuf:"varint,2,opt,name=save_at,json=saveAt,proto3" json:"save_at" bson:"save_at"`
	// 事件类型
	// @gotags: bson:"type" json:"type"
	Type Type `protobuf:"varint,3,opt,name=type,proto3,enum=infraboard.maudit.event.Type" json:"type" bson:"type"`
	// 事件头
	// @gotags: bson:"header" json:"header"
	Header *Header `protobuf:"bytes,4,opt,name=header,proto3" json:"header" bson:"header"`
	// 操作事件数据
	// @gotags: bson:"body" json:"body"
	Body *OperateEventData `protobuf:"bytes,5,opt,name=body,proto3" json:"body" bson:"body"`
}

func (x *OperateEvent) Reset() {
	*x = OperateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_maudit_apps_event_pb_event_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperateEvent) ProtoMessage() {}

func (x *OperateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_maudit_apps_event_pb_event_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperateEvent.ProtoReflect.Descriptor instead.
func (*OperateEvent) Descriptor() ([]byte, []int) {
	return file_maudit_apps_event_pb_event_proto_rawDescGZIP(), []int{3}
}

func (x *OperateEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OperateEvent) GetSaveAt() int64 {
	if x != nil {
		return x.SaveAt
	}
	return 0
}

func (x *OperateEvent) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_OPERATE
}

func (x *OperateEvent) GetHeader() *Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *OperateEvent) GetBody() *OperateEventData {
	if x != nil {
		return x.Body
	}
	return nil
}

// OperateEventSet todo
type OperateEventSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"total"
	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	// @gotags: json:"items"
	Items []*OperateEvent `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
}

func (x *OperateEventSet) Reset() {
	*x = OperateEventSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_maudit_apps_event_pb_event_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperateEventSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperateEventSet) ProtoMessage() {}

func (x *OperateEventSet) ProtoReflect() protoreflect.Message {
	mi := &file_maudit_apps_event_pb_event_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperateEventSet.ProtoReflect.Descriptor instead.
func (*OperateEventSet) Descriptor() ([]byte, []int) {
	return file_maudit_apps_event_pb_event_proto_rawDescGZIP(), []int{4}
}

func (x *OperateEventSet) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *OperateEventSet) GetItems() []*OperateEvent {
	if x != nil {
		return x.Items
	}
	return nil
}

type SaveReponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"success"
	Success []string `protobuf:"bytes,1,rep,name=success,proto3" json:"success"`
	// @gotags: json:"failed"
	Failed []string `protobuf:"bytes,2,rep,name=failed,proto3" json:"failed"`
}

func (x *SaveReponse) Reset() {
	*x = SaveReponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_maudit_apps_event_pb_event_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveReponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveReponse) ProtoMessage() {}

func (x *SaveReponse) ProtoReflect() protoreflect.Message {
	mi := &file_maudit_apps_event_pb_event_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveReponse.ProtoReflect.Descriptor instead.
func (*SaveReponse) Descriptor() ([]byte, []int) {
	return file_maudit_apps_event_pb_event_proto_rawDescGZIP(), []int{5}
}

func (x *SaveReponse) GetSuccess() []string {
	if x != nil {
		return x.Success
	}
	return nil
}

func (x *SaveReponse) GetFailed() []string {
	if x != nil {
		return x.Failed
	}
	return nil
}

// SaveEventRequest 保存事件
type SaveEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"items" json:"items"
	Items []*Event `protobuf:"bytes,1,rep,name=items,proto3" json:"items" bson:"items"`
}

func (x *SaveEventRequest) Reset() {
	*x = SaveEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_maudit_apps_event_pb_event_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveEventRequest) ProtoMessage() {}

func (x *SaveEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_maudit_apps_event_pb_event_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveEventRequest.ProtoReflect.Descriptor instead.
func (*SaveEventRequest) Descriptor() ([]byte, []int) {
	return file_maudit_apps_event_pb_event_proto_rawDescGZIP(), []int{6}
}

func (x *SaveEventRequest) GetItems() []*Event {
	if x != nil {
		return x.Items
	}
	return nil
}

// QueryEventRequest 查询Book请求
type QueryEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page *request.PageRequest `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Name string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *QueryEventRequest) Reset() {
	*x = QueryEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_maudit_apps_event_pb_event_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryEventRequest) ProtoMessage() {}

func (x *QueryEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_maudit_apps_event_pb_event_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryEventRequest.ProtoReflect.Descriptor instead.
func (*QueryEventRequest) Descriptor() ([]byte, []int) {
	return file_maudit_apps_event_pb_event_proto_rawDescGZIP(), []int{7}
}

func (x *QueryEventRequest) GetPage() *request.PageRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *QueryEventRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_maudit_apps_event_pb_event_proto protoreflect.FileDescriptor

var file_maudit_apps_event_pb_event_proto_rawDesc = []byte{
	0x0a, 0x20, 0x6d, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x2f, 0x70, 0x62, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x17, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x19, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x6d, 0x63, 0x75, 0x62, 0x65, 0x2f, 0x70, 0x62,
	0x2f, 0x70, 0x61, 0x67, 0x65, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xad, 0x01, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a,
	0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x22, 0x88, 0x03, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x34, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2e, 0x6d, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x47, 0x0a, 0x0c, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x24, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x4d, 0x65, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xee, 0x02, 0x0a, 0x10,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xe2, 0x01, 0x0a,
	0x0c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x61, 0x76, 0x65, 0x41, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2e, 0x6d, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x69, 0x6e, 0x66, 0x72,
	0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x3d, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x22, 0x64, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3b, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x6e, 0x66, 0x72,
	0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x3f, 0x0a, 0x0b, 0x53, 0x61, 0x76, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x22, 0x48, 0x0a, 0x10, 0x53, 0x61, 0x76, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0x5f, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2e, 0x6d, 0x63, 0x75, 0x62, 0x65, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x2a, 0x58, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x09, 0x0a, 0x05,
	0x54, 0x52, 0x41, 0x43, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x45, 0x42, 0x55, 0x47,
	0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04,
	0x57, 0x41, 0x52, 0x4e, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x04, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x52, 0x49, 0x54, 0x49, 0x43, 0x41, 0x4c, 0x10, 0x05, 0x12,
	0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x53, 0x54, 0x45, 0x52, 0x10, 0x06, 0x2a, 0x13, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x45,
	0x10, 0x00, 0x2a, 0x25, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x42, 0x55, 0x46, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x01, 0x32, 0xcf, 0x01, 0x0a, 0x07, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5e, 0x0a, 0x09, 0x53, 0x61, 0x76, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x29, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e,
	0x6d, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x61, 0x76,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x2a, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2e, 0x6d, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x22, 0x00, 0x42, 0x29, 0x5a, 0x27, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x2f, 0x6d, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2f, 0x61, 0x70, 0x70, 0x73,
	0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_maudit_apps_event_pb_event_proto_rawDescOnce sync.Once
	file_maudit_apps_event_pb_event_proto_rawDescData = file_maudit_apps_event_pb_event_proto_rawDesc
)

func file_maudit_apps_event_pb_event_proto_rawDescGZIP() []byte {
	file_maudit_apps_event_pb_event_proto_rawDescOnce.Do(func() {
		file_maudit_apps_event_pb_event_proto_rawDescData = protoimpl.X.CompressGZIP(file_maudit_apps_event_pb_event_proto_rawDescData)
	})
	return file_maudit_apps_event_pb_event_proto_rawDescData
}

var file_maudit_apps_event_pb_event_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_maudit_apps_event_pb_event_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_maudit_apps_event_pb_event_proto_goTypes = []interface{}{
	(Level)(0),                  // 0: infraboard.maudit.event.Level
	(Type)(0),                   // 1: infraboard.maudit.event.Type
	(ContentType)(0),            // 2: infraboard.maudit.event.ContentType
	(*Event)(nil),               // 3: infraboard.maudit.event.Event
	(*Header)(nil),              // 4: infraboard.maudit.event.Header
	(*OperateEventData)(nil),    // 5: infraboard.maudit.event.OperateEventData
	(*OperateEvent)(nil),        // 6: infraboard.maudit.event.OperateEvent
	(*OperateEventSet)(nil),     // 7: infraboard.maudit.event.OperateEventSet
	(*SaveReponse)(nil),         // 8: infraboard.maudit.event.SaveReponse
	(*SaveEventRequest)(nil),    // 9: infraboard.maudit.event.SaveEventRequest
	(*QueryEventRequest)(nil),   // 10: infraboard.maudit.event.QueryEventRequest
	nil,                         // 11: infraboard.maudit.event.Header.MetaEntry
	(*anypb.Any)(nil),           // 12: google.protobuf.Any
	(*request.PageRequest)(nil), // 13: infraboard.mcube.page.PageRequest
}
var file_maudit_apps_event_pb_event_proto_depIdxs = []int32{
	1,  // 0: infraboard.maudit.event.Event.type:type_name -> infraboard.maudit.event.Type
	4,  // 1: infraboard.maudit.event.Event.header:type_name -> infraboard.maudit.event.Header
	12, // 2: infraboard.maudit.event.Event.body:type_name -> google.protobuf.Any
	0,  // 3: infraboard.maudit.event.Header.level:type_name -> infraboard.maudit.event.Level
	2,  // 4: infraboard.maudit.event.Header.content_type:type_name -> infraboard.maudit.event.ContentType
	11, // 5: infraboard.maudit.event.Header.meta:type_name -> infraboard.maudit.event.Header.MetaEntry
	1,  // 6: infraboard.maudit.event.OperateEvent.type:type_name -> infraboard.maudit.event.Type
	4,  // 7: infraboard.maudit.event.OperateEvent.header:type_name -> infraboard.maudit.event.Header
	5,  // 8: infraboard.maudit.event.OperateEvent.body:type_name -> infraboard.maudit.event.OperateEventData
	6,  // 9: infraboard.maudit.event.OperateEventSet.items:type_name -> infraboard.maudit.event.OperateEvent
	3,  // 10: infraboard.maudit.event.SaveEventRequest.items:type_name -> infraboard.maudit.event.Event
	13, // 11: infraboard.maudit.event.QueryEventRequest.page:type_name -> infraboard.mcube.page.PageRequest
	9,  // 12: infraboard.maudit.event.Service.SaveEvent:input_type -> infraboard.maudit.event.SaveEventRequest
	10, // 13: infraboard.maudit.event.Service.QueryEvent:input_type -> infraboard.maudit.event.QueryEventRequest
	8,  // 14: infraboard.maudit.event.Service.SaveEvent:output_type -> infraboard.maudit.event.SaveReponse
	7,  // 15: infraboard.maudit.event.Service.QueryEvent:output_type -> infraboard.maudit.event.OperateEventSet
	14, // [14:16] is the sub-list for method output_type
	12, // [12:14] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_maudit_apps_event_pb_event_proto_init() }
func file_maudit_apps_event_pb_event_proto_init() {
	if File_maudit_apps_event_pb_event_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_maudit_apps_event_pb_event_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_maudit_apps_event_pb_event_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_maudit_apps_event_pb_event_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperateEventData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_maudit_apps_event_pb_event_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_maudit_apps_event_pb_event_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperateEventSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_maudit_apps_event_pb_event_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveReponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_maudit_apps_event_pb_event_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_maudit_apps_event_pb_event_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_maudit_apps_event_pb_event_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_maudit_apps_event_pb_event_proto_goTypes,
		DependencyIndexes: file_maudit_apps_event_pb_event_proto_depIdxs,
		EnumInfos:         file_maudit_apps_event_pb_event_proto_enumTypes,
		MessageInfos:      file_maudit_apps_event_pb_event_proto_msgTypes,
	}.Build()
	File_maudit_apps_event_pb_event_proto = out.File
	file_maudit_apps_event_pb_event_proto_rawDesc = nil
	file_maudit_apps_event_pb_event_proto_goTypes = nil
	file_maudit_apps_event_pb_event_proto_depIdxs = nil
}
